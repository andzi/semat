<h2>Evidence-Based Software Engineering Group </h2>
The Evidence-Based Software Engineering Group at Carnegie Mellon University aims to improve state of practice in industry and software engineering education by using empirical and evidence-based research methods. The group focuses on the instrumentation, measurement, evaluation, and validation of software-intensive systems, software engineering methods and theories, software development teams, and engineering technologies, practices, and techniques. Research activities are conducted in both industrial and educational settings. Hybrid and novel study designs customized to the context involve a mix of in-vivo, in-vitro and in-situ methods, including field studies, case studies, quasi-experiments, artifact studies, surveys, and simulation.


<h2>SEMAT Essence Overview</h2>
<p>In 2009, Ivar Jacobson, Bertrand Meyer, and Richard Soley started work on the “Software Engineering Method and Theory” (SEMAT) with the goal of "re-founding software engineering as a rigorous discipline” [7]. While many software engineering principles, techniques, practices and methods exist, the SEMAT founders’ ambition is to create a general theory of software engineering and a unifying process framework. Out of their initiative has emerged the SEMAT Essence language and kernel, which became an Object Management Group (OMG) beta standard in 2013.</p>
<p>The core idea of SEMAT is that software projects exhibit universal behavior and transition through identifiable states as they progress. SEMAT groups these states together by different software engineering aspects or dimensions called “alphas.” SEMAT identifies seven alphas as core to every software engineering project: Stakeholders, Opportunity, Requirements, Software System, Team, Way of Working, and Work. These seven alphas serve as the Essence kernel as illustrated in Figure 1.</p>
<p>Each alpha progresses through a number of states during the project lifecycle. For example, the Stakeholders alpha progresses through the states Recognized, Represented, Involved, In Agreement, Satisfied for Deployment, and Satisfied in Use. Each state includes a checklist to help determine if the project has achieved that state. Each checklist item provides a goal to be reached in order to progress to that state.</p>
<p>Despite the sequential definition of the states for each alpha, in practice, projects could fall back to previous states. Similarly, in some circumstances, it might make sense for a project to achieve a number of states simultaneously within a given alpha.</p>
<div class="center-block"><br/><%= image_tag "essence_kernel_alphas.png" %><br/><b>Figure 1: Essence kernel alphas and their states</b></div><br/>
<p>The SEMAT vision is also to create a library of practices described using the Essence language and sitting on top of the Essence kernel. Practices would be composed to become specific methods addressing specific project or organization needs. Practices would help a team identify how to progress their project from one state to the next.</p>
<p>In The Essence of Software Engineering [9], the authors identify three separate applications of SEMAT: 1) project monitoring and steering, 2) determining when to green light projects, and 3)
describing workflow through an organizational structure. This paper focuses mostly on the first application, project monitoring and steering, where a team assesses its current project state in each of the alphas and identifies possible actions to help transition from the current state to the next target state.</p>
Source: "State-based Monitoring and Goal-driven Project Steering: Field Study of the SEMAT Essence Framework" by Cécile Péraire & Todd Sedano